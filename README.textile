h2. The name

Isop is the swedish name for hyssop. Like any spice it is intended to give flavor to the development of command line apps in .net. 

h2. Goal

The goal is to be able to write code like:
<pre><code>someprogram.exe My Action --argument value</code></pre>
So that the class with the name My or MyController and the method with the name Action gets invoked.

This library is intended to be like chocolate pudding mix. Not something that will replace your dinner, but rather something easy to make for dessert. A way of helping you build for instance the essential administrative apps. It's not a replacement for baking cake (building a full blown administrative interface in html, silverlight, wpf ... ). 

h2. Example

h3. Having your own Main

You're hooking it up by writing something like:
<pre><code>static void Main(string[] args)
{
  ArgumentParser.Build()
                .Recognize(typeof(MyController))
                .Parse(args)
                .Invoke(Console.Out);
}</code></pre>

Look at the <a href="/wallymathieu/isop/blob/master/Example/Program.cs">Example project</a> for the most recent example of how it is used. 

h3. Using Isop.cli.exe

You're hooking it up by writing something like:
<pre><code> class IsopConfiguration
    {
        public IEnumerable<Type> Recognizes()
        {
            return new[] { typeof(MyController) };
        }
        public bool RecognizeHelp{get{return true;}}
    }
</code></pre>

Then invoking your program by 
<pre><code>Isop.Cli.exe My Action --argument value</code></pre>
After you have put Isop.Cli.exe (and Isop.dll of course) in the same folder as your dll that contains the class IsopConfiguration.

Look at the <a href="/wallymathieu/isop/blob/master/Example.Cli/Program.cs">Example Cli project</a> for the most recent example of how it is used. 
